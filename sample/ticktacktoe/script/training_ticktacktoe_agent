#!/usr/local/bin/python

# Resolve path configucation
import os
import sys
import argparse

root = os.path.join(os.path.dirname(__file__), "../"*3)
src_path = os.path.join(root, "kyoka")
sample_path = os.path.join(root, "sample")
sys.path.append(root)
sys.path.append(src_path)
sys.path.append(sample_path)

from kyoka.algorithm.montecarlo.montecarlo import MonteCarlo
from kyoka.algorithm.policy.epsilon_greedy_policy import EpsilonGreedyPolicy
from kyoka.algorithm.finish_rule.watch_iteration_count import WatchIterationCount

from sample.ticktacktoe.ticktacktoe_domain import TickTackToeDomain
from sample.ticktacktoe.ticktacktoe_table_value_function import TickTackToeTableValueFunction
from sample.ticktacktoe.ticktacktoe_helper import TickTackToeHelper


VALUE_FUNC_SAVE_DATA_PATH = os.path.join(os.path.dirname(__file__), "montecarlo_ticktacktoe_value_function_data.pickle")

domain = TickTackToeDomain()
value_func = TickTackToeTableValueFunction()
value_func.setUp()
if os.path.isfile(VALUE_FUNC_SAVE_DATA_PATH):
  print "loading value function data from %s" % VALUE_FUNC_SAVE_DATA_PATH
  value_func.load(VALUE_FUNC_SAVE_DATA_PATH)
  print "finished loading value function"
policy = EpsilonGreedyPolicy(domain, value_func)
RL_algo = MonteCarlo()
finish_rule = WatchIterationCount(target_count=50000)

print "start GPI iteration..."
msg = RL_algo.GPI(domain, policy, value_func, finish_rule)
print msg

print "saving value function data into %s" % VALUE_FUNC_SAVE_DATA_PATH
value_func.save(VALUE_FUNC_SAVE_DATA_PATH)
print "finished saving value function"

